%% This program is free software; you can redistribute it and/or modify
%% it under the terms of the GNU Lesser General Public License (LGPL)
%% as published by the Free Software Foundation; either version 2.1 of
%% the License, or (at your option) any later version.
%% 
%% This program is distributed in the hope that it will be useful,
%% but WITHOUT ANY WARRANTY; without even the implied warranty of
%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%% GNU Lesser General Public License for more details.
%% 
%% You should have received a copy of the GNU Lesser General Public 
%% License along with this program; if not, write to the
%% Free Software Foundation, Inc., 
%% 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
%%***********************************************************************
%
%%
%% This file contains all definitions useful for references.
%% 
%% author: Dieter Freismuth
%% version: $Revision: 1.16 $
%
%% Possible options:
%%    german    adopts itself to German and requires the according
%%              package. Please do not switch to German by requiring
%%              the german package by hand but always use this option
%%              instead!
%
%% Besides other features this package automatically adapts itself
%% to work with pdflatex or standard latex. Therefore it is not
%% necessary to care for the different syntax of some commands. All
%% references to chapters, etc... are automatically hyperlinked and a
%% PDF index is automatically generated when working with pdflatex.
%
%% Description of macros for public use defined in this package:
%% \stdref[<caption>]{<label>}
%%                generates a standard cross-reference to the given
%%                label. It also prefixes the resulting number by
%%                the appropriate ``chapter'', ``table'', ``section'',
%%                etc. text. Therefore e.g.
%%                \stdref{AndAnotherChapter} would expand to
%%                something like ``chapter 7''. Further when used with
%%                pdflatex a hyperlink to the appropriate destination
%%                is generated automatically.
%%                If the optinoal <caption> is given, it is used as a
%%                prefix. So a \stdref[Kap.]{AnotherChapter} would
%%                expand to ``Kap. 7''.
%% \fullref[<caption>]{<label>}
%%                does the same as \stdref but expands to a reference
%%                including the pagenumber where the destination is
%%                found. E.g. \stdref{chap:AndAnotherChapter} would
%%                expand to something like ``chapter 7 on page 29''.
%%                If the optinoal <caption> is given, it is used as a
%%                prefix. So a \fullref[Kap.]{AnotherChapter} would
%%                expand to ``Kap. 7 on page 29''.
%% \externalref{<text>}{<URL>}
%%                in case of pdflatex makes a footnote containing a
%%                hyperlink pointing to <URL> with text <URL> and in
%%                case of standard latex expands the text to 
%%                ``<text> [see: <URL>]''.
%% \setbookmark[<opt: level]{<text to appear>}
%%                with pdflatex sets a bookmark in the pdf file to appear in
%%                acrobat's bookmarks on the right side. All bookmarks
%%                automatically appear as children of the enclosing
%%                chapter/section/subsection/...
%%                The optional level can be one of:
%%                default: same as with no parameter
%%                section: bookmark is on top level
%%                subsection: bookmark is on level 2 (if
%%                applicable, otherwise above)
%%                subsubsection: bookmark is on level 3 (if
%%                applicable, otherwise above)
%%                please note that this also applies when working with
%%                'book' style - chapter-level is then section,
%%                section-level is subsection, etc...
%%                with standard latex this command does nothing
%
%% Usefull macros that are defined within the hyperref and nameref packages: 
%% \href{URL}{text}
%%                If you need to make references to URLs, or write explicit links. The
%%                text is made a hyperlink to the URL; this must be a full URL (relative
%%                to the base URL, if that is defined). The special characters # and ~
%%                do not need to be escaped in any way. 
%% \hyperbaseurl{URL} 
%%                A base URL is established, which is prepended to other specified URLs,
%%                to make it easier to write portable documents. 
%% \hyperimage{image URL}
%%                The image referenced by the URL is inserted. 
%% \hyperdef{category}{name}text 
%%                A target area of the document (the text) is marked, and given the name
%%                category.name 
%% \hyperref{URL}{category}{name}{text} 
%%                text is made into a link to URL#category.name 
%% \hyperlink{name}{text} and \hypertarget{name}{text} 
%%                A simple internal link is created with \hypertarget, with two
%%                parameters of an anchor name, and anchor text. \hyperlink has two
%%                arguments, the name of a hypertext object defined somewhere by
%%                \hypertarget, and the text which be used as the link on the page. Note
%%                that in HTML parlance, the \hyperlink command inserts a notional # in
%%                front of each link, making it relative to the current testdocument;
%%                \href expects a full URL.

\NeedsTeXFormat{LaTeX2e} 
\ProvidesPackage{dino_references}[2002/08/02 v1.1 The Reference package]

%%%======================================================================
%%% the packages that are required here

\RequirePackage{ifthen} % required for ifthenelse statements !
\RequirePackage{xr-hyper} % xr-hyper must be loaded prior to hyperref !
\RequirePackage{hyperref}[2002/07/25]
\RequirePackage{nameref}
\RequirePackage{url} % for url

%% option check for german
\newboolean{@german} % @german = false
\DeclareOption{german}{\setboolean{@german}{true}} % @german = true
\ProcessOptions

\ifthenelse{\boolean{@german}}
%----------------------------------------------------------------------
% german
%----------------------------------------------------------------------
{
  % autoref names (uppercase if neccessary):
  \global\def\figureautorefname{Abbildung}
  \global\def\tableautorefname{Tabelle}
  \global\def\equationautorefname{Gleichung}
  \global\def\theoremautorefname{Theorem}
  \global\def\enumerationautorefname{Punkt}
  \global\def\Itemautorefname{Punkt}
  \global\def\footnoteautorefname{Fu\ss note}
  \global\def\chapterautorefname{Kapitel}
  \global\def\sectionautorefname{Abschnitt}
  \global\def\subsectionautorefname{Abschnitt}
  \global\def\subsubsectionautorefname{Abschnitt}
  \global\def\labelautorefname{Abschnitt}
  \global\def\appendixautorefname{Anhang}
  \global\def\paragraphautorefname{Absatz}

  \global\def\onpageCaption{\uppercaseIfNecessary auf Seite}
  \global\def\seeCaption{\uppercaseIfNecessary siehe}
  \global\edef\externalDocumentCaption{in}

  \global\def\prefacename{Vorwort}
  \global\def\refname{Literaturverzeichnis}
  \global\def\abstractname{Kurzzusammenfassung}
  \global\def\bibname{Literaturverzeichnis}
  \global\def\chaptername{Kapitel}
  \global\def\appendixname{Anhang}
  \global\def\glossaryname{Glossar}
  \global\def\listacronymname{Abk\"urzungsverzeichnis}
  \global\def\contentsname{Inhaltsverzeichnis}
  \global\def\listfigurename{Abbildungsverzeichnis}
  \global\def\listtablename{Tabellenverzeichnis}
  \global\def\indexname{Index}
  \global\def\figurename{Abbildung}
  \global\def\tablename{Tabelle}
  \global\def\partname{Teil}
  \global\def\enclname{Anlage(n)}
  \global\def\ccname{Verteiler}
  \global\def\headtoname{An}
  \global\def\pagename{Seite}
  \global\def\seename{siehe}
  \global\def\alsoname{siehe auch}
}
%----------------------------------------------------------------------
% english
%----------------------------------------------------------------------
{
  % autoref names (uppercase if neccessary):
  \global\def\figureautorefname{\uppercaseIfNecessary figure}
  \global\def\tableautorefname{\uppercaseIfNecessary table}
  \global\def\equationautorefname{\uppercaseIfNecessary equation}
  \global\def\theoremautorefname{\uppercaseIfNecessary theorem}
  \global\def\enumerationautorefname{\uppercaseIfNecessary point}
  \global\def\Itemautorefname{\uppercaseIfNecessary point}
  \global\def\footnoteautorefname{\uppercaseIfNecessary footnote}
  \global\def\chapterautorefname{\uppercaseIfNecessary chapter}
  \global\def\sectionautorefname{\uppercaseIfNecessary section}
  \global\def\subsectionautorefname{\uppercaseIfNecessary section}
  \global\def\subsubsectionautorefname{\uppercaseIfNecessary section}
  \global\def\labelautorefname{\uppercaseIfNecessary section}
  \global\def\appendixautorefname{\uppercaseIfNecessary appendix}
  \global\def\paragraphautorefname{\uppercaseIfNecessary paragraph}

  \global\def\onpageCaption{\uppercaseIfNecessary on page}
  \global\def\seeCaption{\uppercaseIfNecessary see}
  \global\edef\externalDocumentCaption{in}

  \global\def\prefacename{Preface}
  \global\def\refname{References}
  \global\def\abstractname{Abstract}
  \global\def\bibname{References}
  \global\def\chaptername{Chapter}
  \global\def\appendixname{Appendix}
  \global\def\contentsname{Table of Contents}
  \global\def\listfigurename{List of Figures}
  \global\def\listtablename{List of Tables}
  \global\def\indexname{Index}
  \global\def\figurename{Figure}
  \global\def\tablename{Table}
  \global\def\partname{Part}
  \global\def\enclname{encl}
  \global\def\ccname{cc}
  \global\def\headtoname{to}
  \global\def\pagename{page}
  \global\def\seename{see}
  \global\def\alsoname{see also}
}

%% %%======================================================================
%% %% Capitalize at beginning of sentence - this is a very bad hack
%% %% from Heiko Oberdiek. Original posting in newsgroup can be found at
%% %% http://groups.google.com/groups?q=uppercase+nonfrenchspacing+group:comp.text.tex&hl=en&lr=&ie=UTF-8&oe=utf-8&selm=358e2615.16587%40news.uni-freiburg.de&rnum=1
%% 
%% \makeatletter
%% \def\@ifbeginofsentence{%
%%   \begingroup
%%   \setbox0=\hbox{ }%
%%   \ifdim\lastskip>\wd0
%%     \expandafter\endgroup\expandafter\@firstoftwo
%%   \else
%%     \ifdim0pt=\lastskip
%%       \expandafter\expandafter\expandafter\endgroup
%%       \expandafter\expandafter\expandafter\@firstoftwo
%%     \else
%%       \expandafter\expandafter\expandafter\endgroup
%%       \expandafter\expandafter\expandafter\@secondoftwo
%%     \fi
%%   \fi
%% }
%% \def\@MakeFirstUppercase#1#2\end{\uppercase{#1}#2}
%% \def\MakeFirstUppercase#1{%
%%   \begingroup
%%     \edef\x{\noexpand\@MakeFirstUppercase#1\noexpand\end}%
%%   \expandafter\endgroup\x
%% }
%% \DeclareRobustCommand{\UppercaseIfSentence}{%
%%   \@ifbeginofsentence{\MakeFirstUppercase}{}}
%% \makeatother
%% 

%%======================================================================
%% Capitalize at beginning of sentence - this is a very bad hack
%% (originally the idea came from Donald Arseneau and was modified by
%% kschmar). Sorry for this bad hack but there is no way in tex to do it
%% better... To see the original code snippet please have a look at
%% http://www.deja.com/[S0=904cae0918aacd2]/getdoc.xp?AN=365171417&CONTEXT=911765043.2124283930&hitnum=4

\def\uppercaseIfNecessary#1{%
  \nonfrenchspacing%
  \ifhmode%
    \ifnum\spacefactor>2000%
      \MakeUppercase{#1}%
    \else%
      \ifvmode\MakeUppercase{#1}%
      \else#1%
      \fi%
    \fi%
  \else%
    \MakeUppercase{#1}%
  \fi%
}

\nonfrenchspacing % turn off frenchspacing, otherwise automatic
                  % capitalizing won't work!
%% end of uppercaseIfNecessary

\newcounter{bookmarklevel}

\newif\ifisPdflatex

\expandafter\ifx\csname pdfoutput\endcsname\relax
%----------------------------------------------------------------------
% standard latex
%----------------------------------------------------------------------
  \isPdflatexfalse
  \providecommand\setbookmark[2][default]{}    % ----- \setbookmark
  \providecommand\externalref[2]{#1\footnote{\url{#2}}} % ----- \externalref
\else

%----------------------------------------------------------------------
% pdflatex 
%----------------------------------------------------------------------
  \isPdflatextrue
%% setup for the hyperref package....
  \hypersetup
  {
    %backref=true,
    breaklinks=true
%    colorlinks=true,
%    linkcolor=red
  }

%% sets a bookmark in the pdf file to appear in acrobat's bookmarks on
%% the right side. All bookmarks automatically appear as children of
%% the enclosing chapter/section/subsection/...
%%
%% param: the text to appear in the bookmark entry
%%
%% example: \setbookmark{This is a Bookmark}
  \newcounter{pdfmarkcounter}
  \providecommand\setbookmark[2][default]{\makebox[0pt][l]{%
  \addtocounter{pdfmarkcounter}{1}%
  \ifthenelse{\equal{default}{#1}}%
  {%
    \updatebookmarklevel%
  }%
  {%
    \ifthenelse{\equal{section}{#1}}%
    {\setcounter{bookmarklevel}{1}}%
    {%
      \ifthenelse{\equal{subsection}{#1}}%
      {\setcounter{bookmarklevel}{2}}%
      {%
        \ifthenelse{\equal{subsubsection}{#1}}%
        {\setcounter{bookmarklevel}{3}}%
        {%
          \ifnum#1<6%
          {%
            \setcounter{bookmarklevel}{#1}%
          }%
          \else%
             \errMsg{undefined bookmarklevel: #1}%
          \fi%
        }%
      }%
    }%
  }%
  \pdfbookmark[\thebookmarklevel]{#2}{pdfmark:\thepdfmarkcounter}%
  }}

  \makeatletter
  \providecommand\externalref[2]{\href{#2}{#1}\footnote{\Hurl{#2}}} % ----- \externalref
                                    % Hurl is the environment of package
                                    % hyperref for correct linebreaks
                                    % but without making hyperlinks
  \makeatother
\fi

%%% overwrites the method in xr-hyper, to be able to call dino@test

\makeatletter
\def\XR@read{%
  \read\@inputcheck to\XR@line
  \expandafter\dino@test\XR@line\XR@%
  \expandafter\XR@test\XR@line...\XR@%
}

% if \dinodoctitle found in file, the title will be set

\long\def\dino@test#1#2\XR@{%
\ifx#1\dinodoctitle
   \def\dino@titleString#2%
\fi%
}

%% overwrites the standard title command and writes the title to the
%% @auxout file. this is used be external references later on.

\makeatletter
\let\dino@title\title%
\def\title#1{%
\dino@noexpand{#1}%
\immediate\write\@auxout{%
\string\dinodoctitle{\dino@notexpandedString}}
\dino@title{#1}%
}

%% dummy but required command!

\newcommand{\dinodoctitle}[1]{}

%% overwrites hyperref.sty and appends the title of the document after
%% the page.

\makeatletter
\def\XR@@dURL#1#2#3#4#5\\{%
  {#1}{#2\space\externalDocumentCaption\space\textit{\dino@titleString}}%
  \if!#4!%
  \else%
    {#3}{#4}{\XR@URL}%
  \fi
}
\makeatother

%% updates the bookmarklevel and set to appropriate value (out of refcounter)

\newcommand{\updatebookmarklevel}{%
\setcounter{bookmarklevel}{0}%
\ifnum\the\value{subsubsection}=0\setcounter{bookmarklevel}{3}\fi%
\ifnum\the\value{subsection}=0\setcounter{bookmarklevel}{2}\fi%
\ifnum\the\value{section}=0\setcounter{bookmarklevel}{1}\fi%
}

%% add a corresponding entry in the table of contents depending
%% on the bookmarklevel

\newcommand\addtotocatbookmarklevel[1]{%
\ifnum\thebookmarklevel=0\addcontentsline{toc}{chapter}{#1}\fi%
\ifnum\thebookmarklevel=1\addcontentsline{toc}{section}{#1}\fi%
\ifnum\thebookmarklevel=2\addcontentsline{toc}{subsection}{#1}\fi%
\ifnum\thebookmarklevel=3\addcontentsline{toc}{subsubsection}{#1}\fi%
\ifnum\thebookmarklevel=4\addcontentsline{toc}{subsubsection}{\hspace{2em} #1}\fi%
\ifnum\thebookmarklevel=5\addcontentsline{toc}{subsubsection}{\hspace{4em} #1}\fi%
\ifnum\thebookmarklevel=6\addcontentsline{toc}{subsubsection}{\hspace{6em} #1}\fi%
\ifnum\thebookmarklevel=7\addcontentsline{toc}{subsubsection}{\hspace{8em} #1}\fi%
}

% stores the given argument in dino@notexpandedString WITHOUT
% expanding it!
\makeatletter
\@ifundefined{dino@noexpand}%
{%
\newcommand{\dino@noexpand}[1]{%
\dino@noexpand#1%
}
\makeatother

%% stores the given argument in var dino@notexpandedString UNEXPANDED!
\makeatletter
\def\dino@noexpand#1{%
\def\next{#1}{%
\xdef\dino@notexpandedString{\expandafter\strip\meaning\next}}}
\def\strip#1>{}
}
\makeatother

%% references in dino documents:

%% rewritten by cdaller 2002/08/01
\makeatletter
% stdref works like autoref, but has improved handling for
% subsubsections and paragraphs. It can detect the type of the
% reference (e.g. section, chapter) independently of the format of the
% label. 
% optional first argument: the caption for the reference may be
% given. e.g. \stdref[Tabelle]{labelname}] results in Tabelle 1.4
%
% 'r@#1' (in combination with \csname and \empty or something)  holds something like 
% "{1}{1}{Title of Section\relax }{section.1}{}" (read from the aux file)
% arguments are: number, page, title, internal label, ??
% 'r@#1' is not directly usable! see complications below :-((

\newcommand{\stdref}[2][]{%
  \expandafter\dino@setref\csname r@#2\endcsname\@fourthoffive{#2}\\#1\\%
}

\def\dino@setref#1#2#3\\#4\\{% csname, extract group, refname
  %works!!! \expandafter#2#1\null %print the given argument (fourthoffive)!
  % check for empty argument:
  \if#1\relax
    \protect\G@refundefinedtrue
    \nfss@text{\reset@font\bfseries ??}%
    \@latex@warning{%
      Reference `#3' on page \thepage \space undefined%
    }%
  \else
% extract type of reference:
    \edef\dino@reflabel{\expandafter\@fourthoffive#1\@empty\@empty}%
    \expandafter\dino@extractreftype\dino@reflabel\\%
% now \dino@reftype holds the type of the reference (chapter, section,
%  ...)
%
% check the type for 'section*'. in this case, use nameref instead of autoref.
    \ifthenelse{\equal{\dino@reftype}{section*}}%
      {%
        \edef\dino@refname{\expandafter\@thirdoffive#1\@empty\@empty}%
        \ifthenelse{\equal{#4}{}}%
        {%
          \hyperref[#3]{\sectionautorefname\ \textit{\dino@refname}}%
        }%
        {%
          \hyperref[#3]{#4 \textit{\dino@refname}}%
        }%
      }%
      {%
        \ifthenelse{\equal{#4}{}}
        {%
          \autoref{#3}%
        }%
        {%
          \hyperref[#3]{#4~\ref*{#3}}%
        }%
      }%
  \fi
}
\def\dino@extractreftype#1.#2\\{%
  \def\dino@reftype{#1}%
}
\def\@firstoffive#1#2#3#4#5{#1}
\def\@secondoffive#1#2#3#4#5{#2}
\def\@thirdoffive#1#2#3#4#5{#3}
\def\@fourthoffive#1#2#3#4#5{#4}
\def\@fifthoffive#1#2#3#4#5{#5}
\makeatother

%% a reference that does not only write the number but also
%% automatically inserts whether it's a figure, table, chapter,
%% etc...  and additionally adds the pagenumber.
%% param1: the label of the reference

\newcommand{\fullref}[2][]{\stdref[#1]{#2} \onpageCaption~\pageref{#2}}


