package org.caleydo.core.data.collection.storage;

import java.util.ArrayList;

import org.caleydo.core.data.collection.INominalStorage;
import org.caleydo.core.data.collection.ccontainer.EDataKind;
import org.caleydo.core.data.collection.ccontainer.NominalStringCContainer;
import org.caleydo.core.manager.IGeneralManager;
import org.caleydo.core.util.exception.CaleydoRuntimeException;
import org.caleydo.core.util.exception.CaleydoRuntimeExceptionType;


public class NominalStorage <T>
extends AStorage 
implements INominalStorage <T> 
{
	/**
	 * Constructor
	 * 
	 * @param iUniqueID the unique ID generated by the system
	 * @param generalManager the general manager
	 */
	public NominalStorage(int iUniqueID, IGeneralManager generalManager)
	{
		super(iUniqueID, generalManager);
	}
	
	/*
	 * 	(non-Javadoc)
	 * @see org.caleydo.core.data.collection.INominalSet#setRawData(java.util.ArrayList)
	 */
	@SuppressWarnings("unchecked")
	public void setRawData(ArrayList<T> alData)
	{
		
		if(bRawDataSet)
			throw new CaleydoRuntimeException("Raw data was already set, tried to set again.", 
					CaleydoRuntimeExceptionType.DATAHANDLING);
		
		bRawDataSet = true;
		
		if(alData.isEmpty())
		{
			throw new CaleydoRuntimeException("Raw Data is empty", 
					CaleydoRuntimeExceptionType.DATAHANDLING);
		}
		else
		{
			if (alData.get(0) instanceof String)
			{			
				ArrayList<String> sAlData = (ArrayList<String>)alData;
				NominalStringCContainer sStorage = new NominalStringCContainer(sAlData);
				hashCContainers.put(EDataKind.RAW, sStorage);
			}
			else
			{
				throw new CaleydoRuntimeException("Raw Data Format not recognized, " +
						"probably not implemented", 
						CaleydoRuntimeExceptionType.DATAHANDLING);
			}
		}
	}
	
	/*
	 * (non-Javadoc)
	 * @see org.caleydo.core.data.collection.INominalSet#setPossibleValues(java.util.ArrayList)
	 */
	@SuppressWarnings("unchecked")
	public void setPossibleValues(ArrayList<T> alPossibleValues)
	{
		if(alPossibleValues.isEmpty())
		{
			throw new CaleydoRuntimeException("Raw Data is empty", 
					CaleydoRuntimeExceptionType.DATAHANDLING);
		}
		else
		{
			if (alPossibleValues.get(0) instanceof String)
			{
				if (hashCContainers.get(EDataKind.RAW) instanceof NominalStringCContainer)
				{
					throw new CaleydoRuntimeException("Raw data format does not correspond to" +
							"specified value list." , 
							CaleydoRuntimeExceptionType.DATAHANDLING);
				}
				else
				{
					ArrayList<String> sAlPossibleValues = (ArrayList<String>)alPossibleValues;
					((NominalStringCContainer)hashCContainers.get(EDataKind.RAW)).
					setPossibleValues(sAlPossibleValues);
				}
			}
			else
			{
				throw new CaleydoRuntimeException("Raw Data Format not recognized, " +
						"probably not implemented", 
						CaleydoRuntimeExceptionType.DATAHANDLING);
			}
		}
	}

	@Override
	public T get(EDataKind dataKind, int index) 
	{
		//(hashStorages.get(storageKind));
		
		// TODO Auto-generated method stub
		return null;
	}


}
