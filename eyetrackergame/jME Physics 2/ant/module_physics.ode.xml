<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
  ~ Copyright (c) 2005-2006 jME Physics 2
  ~ All rights reserved.
  ~
  ~ Redistribution and use in source and binary forms, with or without
  ~ modification, are permitted provided that the following conditions are
  ~ met:
  ~
  ~  * Redistributions of source code must retain the above copyright
  ~    notice, this list of conditions and the following disclaimer.
  ~
  ~  * Redistributions in binary form must reproduce the above copyright
  ~    notice, this list of conditions and the following disclaimer in the
  ~    documentation and/or other materials provided with the distribution.
  ~
  ~  * Neither the name of 'jME Physics 2' nor the names of its contributors
  ~    may be used to endorse or promote products derived from this software
  ~    without specific prior written permission.
  ~
  ~ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  ~ "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
  ~ TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
  ~ PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
  ~ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  ~ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
  ~ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
  ~ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  ~ LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  ~ NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  ~ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  -->

<project name="module_physics.ode" default="compile.module.physics.ode" basedir="..">

    <import file="${basedir}/ant/module_physics.xml"/>
	
    <property name="module.physics.ode.basedir" location="impl/ode"/>


    <property name="compiler.args.physics.ode" value="${compiler.args}"/>

    <property name="physics.ode.output.dir" value="${module.physics.ode.basedir}/classes"/>
    <property name="physics.ode.testoutput.dir" value="${module.physics.ode.basedir}/classes"/>

    <path id="physics.ode.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="physics.ode.module.classpath">
        <pathelement location="${module.physics.ode.basedir}/lib/odejava-jni.jar"/>
        <pathelement location="${physics.output.dir}"/>
        <pathelement location="${jme.output.dir}"/>
        <pathelement location="${module.physics.ode.basedir}/../../../jME/lib/jogg-0.0.5.jar"/>
        <pathelement location="${module.physics.ode.basedir}/../../../jME/lib/lwjgl.jar"/>
        <pathelement location="${module.physics.ode.basedir}/../../../jME/lib/jorbis-0.0.12.jar"/>
        <pathelement location="${module.physics.ode.basedir}/../../../jME/lib/lwjgl_fmod3.jar"/>
        <path refid="library.junit.classpath"/>
    </path>


    <patternset id="excluded.from.module.physics.ode">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.physics.ode">
        <patternset refid="excluded.from.module.physics.ode"/>
    </patternset>

    <path id="physics.ode.module.sourcepath">
        <dirset dir="${module.physics.ode.basedir}">
            <include name="src"/>
        </dirset>
    </path>


    <target name="compile.module.physics.ode"
            depends="compile.module.physics.ode.production,compile.module.physics.ode.tests"
            description="Compile module physics.ode"/>

    <target name="compile.module.physics.ode.production" depends="compile.module.physics"
            description="Compile module physics.ode; production classes">
        <mkdir dir="${physics.ode.output.dir}"/>
        <javac destdir="${physics.ode.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memoryMaximumSize="${compiler.max.memory}" fork="true">
            <compilerarg line="${compiler.args.physics.ode}"/>
            <bootclasspath refid="physics.ode.module.bootclasspath"/>
            <classpath refid="physics.ode.module.classpath"/>
            <src refid="physics.ode.module.sourcepath"/>
        </javac>

        <copy todir="${physics.ode.output.dir}">
            <fileset dir="${module.physics.ode.basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="release.module.physics.ode" depends="compile.module.physics.ode.production, release.module.physics">
        <jar jarfile="${physics.release.dir}/jme-physics.jar" basedir="${physics.ode.output.dir}" update="yes"
             compress="true"
             includes="**"/>
        <mkdir dir="${physics.release.dir}/lib"/>
        <copy todir="${physics.release.dir}/lib">
            <fileset dir="${module.physics.ode.basedir}/lib">
                <include name="*.dll"/>
                <include name="*.so"/>
                <include name="*.*lib"/>
                <include name="*.jar"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.physics.ode.tests" depends="compile.module.physics.ode.production"
            description="compile module physics.ode; test classes" unless="skip.tests"/>

    <target name="clean.module.physics.ode" description="cleanup module">
        <delete dir="${physics.ode.output.dir}"/>
        <delete dir="${physics.ode.testoutput.dir}"/>
    </target>
</project>