<?xml version="1.0" encoding="UTF-8"?>
<templates><codetemplate name="gettercomment" description="Comment for getter methods" context="gettercomment_context" enabled="true">/**
 * @return Returns the ${bare_field_name}.
 */</codetemplate><codetemplate name="settercomment" description="Comment for setter methods" context="settercomment_context" enabled="true">/**
 * @param ${param} The ${bare_field_name} to set.
 */</codetemplate><codetemplate name="fieldcomment" description="Comment for fields" context="fieldcomment_context" enabled="true">/**
 * &lt;code&gt;${field}&lt;/code&gt;
 */</codetemplate><codetemplate name="getterbody" description="Code in created getters" context="getterbody_context" enabled="true">return ${field};</codetemplate><codetemplate name="setterbody" description="Code in created setters" context="setterbody_context" enabled="true">${field} = ${param};</codetemplate><codetemplate name="constructorcomment" description="Comment for created constructors" context="constructorcomment_context" enabled="true">/**
 * ${tags}
 */</codetemplate><codetemplate name="typecomment" description="Comment for created types" context="typecomment_context" enabled="true">/**
 * &lt;code&gt;${type_name}&lt;/code&gt;
 * @author ${user}
 * @version $$Id: jME_codetemplates.xml 4125 2009-03-19 19:53:15Z blaine.dev $$
 */</codetemplate><codetemplate name="methodcomment" description="Comment for non-overriding methods" context="methodcomment_context" enabled="true">/**
 * &lt;code&gt;${enclosing_method}&lt;/code&gt;
 * ${tags}
 */</codetemplate><codetemplate name="overridecomment" description="Comment for overriding methods" context="overridecomment_context" enabled="true">/** &lt;code&gt;${enclosing_method}&lt;/code&gt;
 * ${tags}
 * ${see_to_overridden}
 */</codetemplate><codetemplate name="newtype" description="New classes and interfaces" context="newtype_context" enabled="true">/*
 * Copyright (c) 2003-2008 jMonkeyEngine
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 * * Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in the
 *   documentation and/or other materials provided with the distribution.
 *
 * * Neither the name of 'jMonkeyEngine' nor the names of its contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
${package_declaration}

${typecomment}
${type_declaration}</codetemplate><codetemplate name="catchblock" description="Code in new catch blocks" context="catchblock_context" enabled="true">// ${todo} Auto-generated catch block
${exception_var}.printStackTrace();</codetemplate><codetemplate name="methodbody" description="Code in created method stubs" context="methodbody_context" enabled="true">// ${todo} Auto-generated method stub
${body_statement}</codetemplate><codetemplate name="constructorbody" description="Code in created constructor stubs" context="constructorbody_context" enabled="true">${body_statement}
// ${todo} Auto-generated constructor stub</codetemplate></templates>